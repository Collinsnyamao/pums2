{"remainingRequest":"/home/collins/development/pums2/node_modules/babel-loader/lib/index.js!/home/collins/development/pums2/src/router/index.js","dependencies":[{"path":"/home/collins/development/pums2/src/router/index.js","mtime":1576508295246},{"path":"/home/collins/development/pums2/node_modules/cache-loader/dist/cjs.js","mtime":1576508410497},{"path":"/home/collins/development/pums2/node_modules/babel-loader/lib/index.js","mtime":1576263390796}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\n\n/**\n * Vue Router\n *\n * @library\n *\n * https://router.vuejs.org/en/\n */\n// Lib imports\nimport Vue from 'vue';\nimport VueAnalytics from 'vue-analytics';\nimport Router from 'vue-router';\nimport Meta from 'vue-meta'; // Routes\n\nimport paths from \"./paths\";\n\nfunction route(path, view, name) {\n  return {\n    name: name || view,\n    path: path,\n    component: function component(resolve) {\n      return import(\"@/views/\".concat(view, \".vue\")).then(resolve);\n    }\n  };\n}\n\nVue.use(Router); // Create a new router\n\nvar router = new Router({\n  mode: 'history',\n  routes: paths.map(function (path) {\n    return route(path.path, path.view, path.name);\n  }).concat([{\n    path: '*',\n    redirect: '/'\n  }]),\n  scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    }\n\n    if (to.hash) {\n      return {\n        selector: to.hash\n      };\n    }\n\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n});\nVue.use(Meta); // Bootstrap Analytics\n// Set in .env\n// https://github.com/MatteoGabriele/vue-analytics\n\nif (process.env.GOOGLE_ANALYTICS) {\n  Vue.use(VueAnalytics, {\n    id: process.env.GOOGLE_ANALYTICS,\n    router: router,\n    autoTracking: {\n      page: process.env.NODE_ENV !== 'development'\n    }\n  });\n}\n\nexport default router;",{"version":3,"sources":["/home/collins/development/pums2/src/router/index.js"],"names":["Vue","VueAnalytics","Router","Meta","paths","route","path","view","name","component","resolve","then","use","router","mode","routes","map","concat","redirect","scrollBehavior","to","from","savedPosition","hash","selector","x","y","process","env","GOOGLE_ANALYTICS","id","autoTracking","page","NODE_ENV"],"mappings":";;;AAAA;;;;;;;AAQA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,UAAjB,C,CAEA;;AACA,OAAOC,KAAP;;AAEA,SAASC,KAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAChC,SAAO;AACLA,UAAMA,QAAQD,IADT;AAELD,cAFK;AAGLG,eAAW,mBAACC,OAAD;AAAA,aAAa,yBACXH,IADW,WAEtBI,IAFsB,CAEjBD,OAFiB,CAAb;AAAA;AAHN,GAAP;AAOD;;AAEDV,IAAIY,GAAJ,CAAQV,MAAR,E,CAEA;;AACA,IAAMW,SAAS,IAAIX,MAAJ,CAAW;AACxBY,QAAM,SADkB;AAExBC,UAAQX,MAAMY,GAAN,CAAU;AAAA,WAAQX,MAAMC,KAAKA,IAAX,EAAiBA,KAAKC,IAAtB,EAA4BD,KAAKE,IAAjC,CAAR;AAAA,GAAV,EAA0DS,MAA1D,CAAiE,CACvE;AAAEX,UAAM,GAAR;AAAaY,cAAU;AAAvB,GADuE,CAAjE,CAFgB;AAKxBC,gBALwB,0BAKRC,EALQ,EAKJC,IALI,EAKEC,aALF,EAKiB;AACvC,QAAIA,aAAJ,EAAmB;AACjB,aAAOA,aAAP;AACD;;AACD,QAAIF,GAAGG,IAAP,EAAa;AACX,aAAO;AAAEC,kBAAUJ,GAAGG;AAAf,OAAP;AACD;;AACD,WAAO;AAAEE,SAAG,CAAL;AAAQC,SAAG;AAAX,KAAP;AACD;AAbuB,CAAX,CAAf;AAgBA1B,IAAIY,GAAJ,CAAQT,IAAR,E,CAEA;AACA;AACA;;AACA,IAAIwB,QAAQC,GAAR,CAAYC,gBAAhB,EAAkC;AAChC7B,MAAIY,GAAJ,CAAQX,YAAR,EAAsB;AACpB6B,QAAIH,QAAQC,GAAR,CAAYC,gBADI;AAEpBhB,kBAFoB;AAGpBkB,kBAAc;AACZC,YAAML,QAAQC,GAAR,CAAYK,QAAZ,KAAyB;AADnB;AAHM,GAAtB;AAOD;;AAED,eAAepB,MAAf","sourcesContent":["/**\n * Vue Router\n *\n * @library\n *\n * https://router.vuejs.org/en/\n */\n\n// Lib imports\nimport Vue from 'vue'\nimport VueAnalytics from 'vue-analytics'\nimport Router from 'vue-router'\nimport Meta from 'vue-meta'\n\n// Routes\nimport paths from './paths'\n\nfunction route (path, view, name) {\n  return {\n    name: name || view,\n    path,\n    component: (resolve) => import(\n      `@/views/${view}.vue`\n    ).then(resolve)\n  }\n}\n\nVue.use(Router)\n\n// Create a new router\nconst router = new Router({\n  mode: 'history',\n  routes: paths.map(path => route(path.path, path.view, path.name)).concat([\n    { path: '*', redirect: '/' }\n  ]),\n  scrollBehavior (to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition\n    }\n    if (to.hash) {\n      return { selector: to.hash }\n    }\n    return { x: 0, y: 0 }\n  }\n})\n\nVue.use(Meta)\n\n// Bootstrap Analytics\n// Set in .env\n// https://github.com/MatteoGabriele/vue-analytics\nif (process.env.GOOGLE_ANALYTICS) {\n  Vue.use(VueAnalytics, {\n    id: process.env.GOOGLE_ANALYTICS,\n    router,\n    autoTracking: {\n      page: process.env.NODE_ENV !== 'development'\n    }\n  })\n}\n\nexport default router\n"]}]}