{"remainingRequest":"/home/collins/development/pums2/node_modules/babel-loader/lib/index.js!/home/collins/development/pums2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/collins/development/pums2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/collins/development/pums2/src/components/core/Drawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/collins/development/pums2/src/components/core/Drawer.vue","mtime":1576583865264},{"path":"/home/collins/development/pums2/node_modules/cache-loader/dist/cjs.js","mtime":1576508410497},{"path":"/home/collins/development/pums2/node_modules/babel-loader/lib/index.js","mtime":1576263390796},{"path":"/home/collins/development/pums2/node_modules/cache-loader/dist/cjs.js","mtime":1576508410497},{"path":"/home/collins/development/pums2/node_modules/vue-loader/lib/index.js","mtime":1576508411061}],"contextDependencies":[],"result":["import _objectSpread from \"/home/collins/development/pums2/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Utilities\nimport { mapMutations, mapState } from 'vuex';\nexport default {\n  props: {\n    opened: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      logo: 'favicon.ico',\n      links: [{\n        to: '/',\n        icon: 'mdi-view-dashboard',\n        text: 'Dashboard'\n      }, {\n        to: '/user-profile',\n        icon: 'mdi-account',\n        text: 'Project Profile'\n      }, {\n        to: '/table-list',\n        icon: 'mdi-clipboard-outline',\n        text: 'Data Tables'\n      }, {\n        to: '/typography',\n        icon: 'mdi-format-font',\n        text: 'Progress'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState('app', ['image', 'color']), {\n    inputValue: {\n      get: function get() {\n        return this.$store.state.app.drawer;\n      },\n      set: function set(val) {\n        this.setDrawer(val);\n      }\n    },\n    items: function items() {\n      return this.$t('Layout.View.items');\n    }\n  }),\n  methods: _objectSpread({}, mapMutations('app', ['setDrawer', 'toggleDrawer']))\n};",{"version":3,"sources":["Drawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA,SACA,YADA,EAEA,QAFA,QAGA,MAHA;AAKA,eAAA;AACA,SAAA;AACA,YAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA;AADA,GADA;AAOA,QAAA;AAAA,WAAA;AACA,YAAA,aADA;AAEA,aAAA,CACA;AACA,YAAA,GADA;AAEA,cAAA,oBAFA;AAGA,cAAA;AAHA,OADA,EAMA;AACA,YAAA,eADA;AAEA,cAAA,aAFA;AAGA,cAAA;AAHA,OANA,EAWA;AACA,YAAA,aADA;AAEA,cAAA,uBAFA;AAGA,cAAA;AAHA,OAXA,EAgBA;AACA,YAAA,aADA;AAEA,cAAA,iBAFA;AAGA,cAAA;AAHA,OAhBA;AAFA,KAAA;AAAA,GAPA;AA+CA,8BACA,SAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CADA;AAEA,gBAAA;AACA,SADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA;AACA,OAHA;AAIA,SAJA,eAIA,GAJA,EAIA;AACA,aAAA,SAAA,CAAA,GAAA;AACA;AANA,KAFA;AAUA,SAVA,mBAUA;AACA,aAAA,KAAA,EAAA,CAAA,mBAAA,CAAA;AACA;AAZA,IA/CA;AA8DA,6BACA,aAAA,KAAA,EAAA,CAAA,WAAA,EAAA,cAAA,CAAA,CADA;AA9DA,CAAA","sourcesContent":["<template>\n  <v-navigation-drawer\n    id=\"app-drawer\"\n    v-model=\"inputValue\"\n    app\n    dark\n    floating\n    persistent\n    mobile-break-point=\"991\"\n    width=\"260\"\n  >\n    <v-img\n      :src=\"image\"\n      height=\"100%\"\n    >\n      <v-layout\n        class=\"fill-height\"\n        tag=\"v-list\"\n        column\n      >\n        <v-list-tile avatar>\n          <!--<v-list-tile-avatar\n            color=\"white\"\n          >\n            <v-img\n              :src=\"logo\"\n              height=\"34\"\n              contain\n            />\n          </v-list-tile-avatar>-->\n          <v-list-tile-title class=\"title\" style=\"margin-left: 50px;\">\n            VUMBUA\n          </v-list-tile-title>\n        </v-list-tile>\n        <v-divider/>\n        <v-list-tile\n          v-for=\"(link, i) in links\"\n          :key=\"i\"\n          :to=\"link.to\"\n          :active-class=\"color\"\n          avatar\n          class=\"v-list-item\"\n        >\n          <v-list-tile-action>\n            <v-icon>{{ link.icon }}</v-icon>\n          </v-list-tile-action>\n          <v-list-tile-title\n            v-text=\"link.text\"\n          />\n        </v-list-tile>\n        <v-list-tile\n          active-class=\"success\"\n          class=\"v-list-item v-list__tile--buy\"\n          to=\"/upgrade\"\n        >\n          <v-list-tile-action>\n            <v-icon>mdi-package-up</v-icon>\n          </v-list-tile-action>\n          <v-list-tile-title class=\"font-weight-light\">\n            Upgrade To PRO\n          </v-list-tile-title>\n        </v-list-tile>\n      </v-layout>\n    </v-img>\n  </v-navigation-drawer>\n</template>\n\n<script>\n// Utilities\nimport {\n  mapMutations,\n  mapState\n} from 'vuex'\n\nexport default {\n  props: {\n    opened: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    logo: 'favicon.ico',\n    links: [\n      {\n        to: '/',\n        icon: 'mdi-view-dashboard',\n        text: 'Dashboard'\n      },\n      {\n        to: '/user-profile',\n        icon: 'mdi-account',\n        text: 'Project Profile'\n      },\n      {\n        to: '/table-list',\n        icon: 'mdi-clipboard-outline',\n        text: 'Data Tables'\n      },\n      {\n        to: '/typography',\n        icon: 'mdi-format-font',\n        text: 'Progress'\n      },\n      /*{\n        to: '/icons',\n        icon: 'mdi-chart-bubble',\n        text: 'Icons'\n      },\n      {\n        to: '/maps',\n        icon: 'mdi-map-marker',\n        text: 'Maps'\n      },\n      {\n        to: '/notifications',\n        icon: 'mdi-bell',\n        text: 'Notifications'\n      }*/\n    ]\n  }),\n  computed: {\n    ...mapState('app', ['image', 'color']),\n    inputValue: {\n      get () {\n        return this.$store.state.app.drawer\n      },\n      set (val) {\n        this.setDrawer(val)\n      }\n    },\n    items () {\n      return this.$t('Layout.View.items')\n    }\n  },\n\n  methods: {\n    ...mapMutations('app', ['setDrawer', 'toggleDrawer'])\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  #app-drawer {\n    .v-list__tile {\n      border-radius: 4px;\n\n      &--buy {\n        margin-top: auto;\n        margin-bottom: 17px;\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/core"}]}